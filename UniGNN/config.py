import argparse


def parse():
    p = argparse.ArgumentParser("UniGNN: Unified Graph and Hypergraph Message Passing Model", formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    p.add_argument('--data', type=str, default='coauthorship')
    p.add_argument('--dataset', type=str, default='pubmed')
    p.add_argument('--model-name', type=str, default='UniGAT')
    p.add_argument('--first-aggregate', type=str, default='mean')
    p.add_argument('--second-aggregate', type=str, default='sum')
    p.add_argument('--add-self-loop', action="store_true", default='True')
    p.add_argument('--use-norm', action="store_true")
    p.add_argument('--activation', type=str, default='relu')
    p.add_argument('--nlayer', type=int, default=2)
    p.add_argument('--nhid', type=int, default=8)
    p.add_argument('--nhead', type=int, default=8)
    p.add_argument('--dropout', type=float, default=0.6)
    p.add_argument('--input-drop', type=float, default=0.6)
    p.add_argument('--attn-drop', type=float, default=0.6)
    p.add_argument('--lr', type=float, default=0.01)
    p.add_argument('--wd', type=float, default=5e-4)
    p.add_argument('--epochs', type=int, default=200)
    p.add_argument('--n-runs', type=int, default=10)
    p.add_argument('--gpu', type=int, default=0)
    p.add_argument('--seed', type=int, default=1)
    p.add_argument('--patience', type=int, default=200)
    p.add_argument('--nostdout', action="store_true")
    p.add_argument('--split', type=int, default=1)
    p.add_argument('--out-dir', type=str, default='runs/test')
    return p.parse_args()
